{"name":"Tupi","tagline":"A language and compiler support to describe, expand and execute extended finite-state machines","body":"# Tupi\r\nA language and interpreter support to describe, expand and execute extended finite-state machines (EFSM).\r\n\r\n###Language\r\nThe main goal is to mimic every EFSM property in **code**:\r\n- Memory\r\n- States\r\n- Transitions\r\n- Events\r\n- Guards\r\n- Actions\r\n\r\nPlus additional concepts and features such as **polymorphism** and **pattern matching**. <br>\r\n**You can learn more in our [Wiki](https://github.com/fmca/Tupi/wiki)**\r\n\r\n###Interpreter\r\n\r\nThe interpreter is written in Java, so it will run in most platforms, even web pages.<br>Besides its main functionality, you can also enable the generation of ```dot``` files to illustrate any EFSM.\r\n\r\n###Input and Output\r\nUser input and console output are natively implemented as EFSMs. (I bet you started noticing that everything will be described using state-machines... everything!)\r\n\r\n\r\n###Code Example\r\n\r\nEvery event is described by a ```{EVENT}``` tag followed by one or more *transition pattern matches* ```[states_origin] -> newState```, a transition ```guard``` and an ```action``` to be executed. \r\n```\r\nmachine Stack\r\n\r\n\tmemory\r\n\t\tlist, peek\r\n\r\n\tstates\r\n\t\tempty, notempty\r\n\t\r\n\tevents\r\n\t\t{START}\r\n\t\t    [*] -> empty\r\n\t\t\t    initialize\r\n\t\r\n\t\t{PUSH} [x]\r\n\t\t\t[*empty] -> notempty\t| pushAllowed\r\n\t\t\t\taddElement x\r\n\t\t\t\r\n\t\t{POP}\r\n\t\t\t[notempty] -> empty\t\t| !hasMore1Element\r\n\t\t\t\tdeleteElement\r\n\t\t\t[notempty] -> notempty\t| hasMore1Element\r\n\t\t\t\tdeleteElement\r\n\tguards\r\n\t\thasMore1Element = list.size > 1\r\n\t\tpushAllowed = true\r\n\t\t\r\n\tactions\r\n\t\tinitialize\r\n\t\t\tlist = start List\r\n\t\t\t\r\n\t\taddElement [x]\r\n\t\t\tlist {add} x\r\n\t\t\tpeek = list.last\r\n\t\t\t\r\n\t\tdeleteElement\r\n\t\t\tlist {delete} list.size-1\r\n\t\t\tpeek = list.last\r\n\t\r\n\t\r\n```\r\n\r\nYou can also extend an existent machine:\r\n\r\n```\r\nmachine SizeLimitedStack extends Stack\r\n\t\r\n\tmemory\r\n\t\tlimit\r\n\t\t\r\n\tstates\r\n\t\tfull\r\n\t\t\t\r\n\tevents\r\n\t\t{PUSH} [x]\r\n\t\t\t[*empty] -> full | !pushAllowed\r\n\t\t\t\taddElement x\r\n\t\t\t\t\r\n\t\t{POP}\r\n\t\t\t[full] -> empty | !hasMore1Element\r\n\t\t\t\tdeleteElement\r\n\t\t\t[full] -> notempty\r\n\t\t\t\tdeleteElement\r\n\t\r\n\tguards\r\n\t\tpushAllowed = list.size < limit\r\n\t\t\r\n\tactions\r\n\t\tinitialize [x]\r\n\t\t\tStack.initialize\r\n\t\t\tlimit = x\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}