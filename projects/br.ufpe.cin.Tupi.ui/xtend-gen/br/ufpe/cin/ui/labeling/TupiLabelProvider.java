/**
 * generated by Xtext
 */
package br.ufpe.cin.ui.labeling;

import br.ufpe.cin.tupi.ActionsDecl;
import br.ufpe.cin.tupi.Event;
import br.ufpe.cin.tupi.EventsDecl;
import br.ufpe.cin.tupi.GuardsDecl;
import br.ufpe.cin.tupi.MachineBody;
import br.ufpe.cin.tupi.Memory;
import br.ufpe.cin.tupi.MemoryDecl;
import br.ufpe.cin.tupi.State;
import br.ufpe.cin.tupi.StateDecl;
import br.ufpe.cin.tupi.Transition;
import br.ufpe.cin.tupi.TriggerEvent;
import com.google.inject.Inject;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;
import org.eclipse.xtext.xbase.lib.IterableExtensions;

/**
 * Provides labels for EObjects.
 * 
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#label-provider
 */
@SuppressWarnings("all")
public class TupiLabelProvider extends DefaultEObjectLabelProvider {
  @Inject
  public TupiLabelProvider(final AdapterFactoryLabelProvider delegate) {
    super(delegate);
  }
  
  public String text(final MachineBody body) {
    return "Body";
  }
  
  public String text(final EventsDecl e) {
    return "Events";
  }
  
  public String text(final StateDecl s) {
    return "States";
  }
  
  public String text(final GuardsDecl g) {
    return "Guards";
  }
  
  public String text(final ActionsDecl a) {
    return "Actions";
  }
  
  public String text(final MemoryDecl m) {
    return "Memory";
  }
  
  public State text(final Transition t) {
    State _xblockexpression = null;
    {
      EList<String> _originStates = t.getOriginStates();
      String _join = IterableExtensions.join(_originStates, ",");
      String _plus = ("[" + _join);
      /* (_plus + "] -> "); */
      _xblockexpression = t.getDestState();
    }
    return _xblockexpression;
  }
  
  public String text(final TriggerEvent t) {
    Event _event = t.getEvent();
    String _name = _event.getName();
    String _plus = (_name + " on ");
    Memory _machine = t.getMachine();
    String _name_1 = _machine.getName();
    return (_plus + _name_1);
  }
}
