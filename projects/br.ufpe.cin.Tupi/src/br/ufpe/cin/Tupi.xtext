grammar br.ufpe.cin.Tupi with org.eclipse.xtext.xbase.Xbase

generate tupi "http://www.ufpe.br/cin/Tupi"

Model:
	namespace=NameSpace use+=UseDecl* machine=MachineDecl?;

NameSpace:
	"namespace" name=QualifiedName;

UseDecl:
	"use" importedNamespace=QualifiedName;

MachineDecl:
	'machine' name=ID ("extends" superType=[MachineDecl])? body=MachineBody;

MachineBody:
	{MachineBody} memoriesDecl=MemoryDecl? statesDecl=StateDecl? guardsDecl=GuardsDecl? actionsDecl=ActionsDecl?
	eventsDecl=EventsDecl?;

EventsDecl:
	{EventsDecl} "events" events+=Event*;

Event:
	"{" name=ID "}" (parameters=VariableListDecl)? transitions+=Transition*;

Transition:
	{Transition} "when" "[" originStates+=STATEPATTERNDECL? ("," originStates+=STATEPATTERNDECL)* "]" "->" destState=[State|QualifiedName] "if"
	guard=[Guard|QualifiedName] "do"
	action=[Action|QualifiedName] ("(" parameters+=XExpression ("," parameters+=XExpression)* ")")? ("=>" triggers+=TriggerEvent)*;

ActionsDecl:
	{ActionsDecl} "actions" actions+=Action*;

Action:
	name=ID (variableListDecl=VariableListDecl)? block=(XBlockExpression) //TupiBlockExpression; //commands+=Command*;

;

TriggerEvent:
	"trigger" event=[Event|QualifiedName] (parameters+=XExpression ("," parameters+=XExpression)*)? ("on" machine=[Memory|QualifiedName])?;

GuardsDecl:
	{GuardsDecl} "guards" guards+=Guard ("," guards+=Guard)*;

Guard:
	name=ID "=" expr=XExpression;

MemoryDecl:
	{MemoryDecl} "memory" (memories+=Memory ("," memories+=Memory)*)?;

Memory:
	type=Type name=ID;

Type:
	typeRef=JvmTypeReference;

StateDecl:
	{StateDecl} "states" states+=State ("," states+=State)*;

State:
	name=ID;

STATEPATTERNDECL:
	("*"? ID "*"?) | "*";

VariableListDecl:
	"(" variablesDecl+=VariableDecl ("," variablesDecl+=VariableDecl)* ")";

VariableDecl:
	type=Type name=ID;